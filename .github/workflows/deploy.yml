name: CI/CD Deploy Java App to Tomcat10 on EC2

# Trigger deployment on push to main branch and allow manual dispatch
on:
  push:
    branches:
      - master
  workflow_dispatch: {}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout your repo
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️⃣ Setup Java 17
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      # 3️⃣ Build WAR file
      - name: Build WAR file
        run: mvn clean package -DskipTests

      # 4️⃣ Verify WAR file exists
      - name: Verify WAR file
        run: |
          echo "=== Listing target directory ==="
          ls -la target/ || true

          echo "=== Checking for WAR files ==="
          if ls target/*.war 1> /dev/null 2>&1; then
            echo "Found WAR files:"
            ls -la target/*.war
            WAR_FILE=$(ls target/*.war | head -1)
            echo "WAR file: $WAR_FILE"

            # Verify it's a file, not directory
            if [ -d "$WAR_FILE" ]; then
              echo "ERROR: $WAR_FILE is a directory, not a file!"
              exit 1
            fi

            # Copy to a known location with correct name
            cp "$WAR_FILE" ./ROOT.war
            echo "WAR_FILE copied to ./ROOT.war"
          else
            echo "ERROR: No WAR files found in target directory"
            exit 1
          fi

      # 5️⃣ Create SSH key file (preserve newlines and set safe permissions)
      - name: Create SSH key file
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

          # Preserve exact private key contents (including newlines)
          printf '%s\n' "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # known_hosts optional (uncomment if you wish to lock hosts)
          # ssh-keyscan -H "${{ secrets.EC2_HOST }}" >> ~/.ssh/known_hosts
          # chmod 644 ~/.ssh/known_hosts

      # 6️⃣ Clean up EC2 and upload WAR file
      - name: Upload WAR to EC2
        run: |
          echo "=== Cleaning up EC2 ==="
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} \
            "sudo rm -f /tmp/ROOT.war; sudo touch /tmp/ROOT.war; sudo chmod 666 /tmp/ROOT.war"

          echo "=== Uploading WAR file ==="
          scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no \
            ./ROOT.war ubuntu@${{ secrets.EC2_HOST }}:/tmp/ROOT.war

      # 7️⃣ Verify file was copied to EC2
      - name: Verify file copied to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "=== Checking /tmp directory ==="
            ls -la /tmp/ || true

            echo "=== Verifying ROOT.war file ==="
            if [ -f "/tmp/ROOT.war" ]; then
              echo "Found ROOT.war file in /tmp:"
              ls -la /tmp/ROOT.war
              file /tmp/ROOT.war

              # Verify it's a regular file
              if [ ! -f "/tmp/ROOT.war" ]; then
                echo "ERROR: /tmp/ROOT.war is not a regular file!"
                exit 1
              fi
            else
              echo "ERROR: /tmp/ROOT.war not found!"
              echo "Contents of /tmp:"
              ls -la /tmp/
              exit 1
            fi

      # 8️⃣ Deploy WAR on Tomcat
      - name: Deploy WAR on Tomcat
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "=== Starting Deployment ==="

            echo "1. Stopping Tomcat..."
            sudo systemctl stop tomcat10 || true

            echo "2. Cleaning up old deployment..."
            sudo rm -rf /var/lib/tomcat10/webapps/ROOT
            sudo rm -f /var/lib/tomcat10/webapps/ROOT.war

            echo "3. Verifying source WAR file exists..."
            if [ ! -f "/tmp/ROOT.war" ]; then
              echo "ERROR: /tmp/ROOT.war not found!"
              echo "Contents of /tmp:"
              ls -la /tmp/
              exit 1
            fi
            echo "WAR file details:"
            ls -lh /tmp/ROOT.war
            file /tmp/ROOT.war

            echo "4. Copying WAR to webapps directory..."
            sudo cp /tmp/ROOT.war /var/lib/tomcat10/webapps/

            echo "5. Setting permissions..."
            sudo chown tomcat:tomcat /var/lib/tomcat10/webapps/ROOT.war || true
            sudo chmod 644 /var/lib/tomcat10/webapps/ROOT.war || true

            echo "6. Verifying WAR file in webapps..."
            ls -lh /var/lib/tomcat10/webapps/ || true
            file /var/lib/tomcat10/webapps/ROOT.war || true

            echo "7. Creating ROOT directory..."
            sudo mkdir -p /var/lib/tomcat10/webapps/ROOT
            sudo chown tomcat:tomcat /var/lib/tomcat10/webapps/ROOT || true
            sudo chmod 755 /var/lib/tomcat10/webapps/ROOT || true

            echo "8. Extracting WAR file..."
            sudo -u tomcat unzip -o /var/lib/tomcat10/webapps/ROOT.war -d /var/lib/tomcat10/webapps/ROOT/

            echo "9. Setting permissions](#)

    
